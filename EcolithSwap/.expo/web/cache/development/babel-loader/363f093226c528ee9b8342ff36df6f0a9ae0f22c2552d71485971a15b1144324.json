{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { Card, ProgressBar, Button } from 'react-native-paper';\nimport { LineChart, PieChart, BarChart } from 'react-native-chart-kit';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { useData } from \"../contexts/DataContext\";\nimport { wasteService } from \"../services/wasteService\";\nimport { colors, typography, spacing } from \"../utils/theme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  screenWidth = _Dimensions$get.width;\nexport default function ImpactScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useData = useData(),\n    userStats = _useData.userStats,\n    isOnline = _useData.isOnline;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    impactStats = _useState2[0],\n    setImpactStats = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    leaderboard = _useState4[0],\n    setLeaderboard = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    refreshing = _useState8[0],\n    setRefreshing = _useState8[1];\n  useEffect(function () {\n    loadImpactData();\n  }, []);\n  var loadImpactData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        if (isOnline) {\n          var _yield$Promise$all = yield Promise.all([wasteService.getImpactStats(), wasteService.getLeaderboard(5)]),\n            _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2),\n            impact = _yield$Promise$all2[0],\n            leaders = _yield$Promise$all2[1];\n          setImpactStats(impact);\n          setLeaderboard(leaders);\n        }\n      } catch (error) {\n        console.error('Error loading impact data:', error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function loadImpactData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleRefresh = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      setRefreshing(true);\n      yield loadImpactData();\n      setRefreshing(false);\n    });\n    return function handleRefresh() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var getImpactLevel = function getImpactLevel(totalSwaps) {\n    if (totalSwaps >= 100) return {\n      level: 'Eco Champion',\n      color: colors.success,\n      icon: 'eco'\n    };\n    if (totalSwaps >= 50) return {\n      level: 'Green Warrior',\n      color: colors.info,\n      icon: 'nature'\n    };\n    if (totalSwaps >= 20) return {\n      level: 'Eco Enthusiast',\n      color: colors.warning,\n      icon: 'spa'\n    };\n    if (totalSwaps >= 5) return {\n      level: 'Green Starter',\n      color: colors.primary,\n      icon: 'local_florist'\n    };\n    return {\n      level: 'Beginner',\n      color: colors.textSecondary,\n      icon: 'eco'\n    };\n  };\n  var impactData = [{\n    name: 'CO₂ Saved',\n    value: userStats.co2Saved,\n    color: colors.success,\n    legendFontColor: colors.text,\n    legendFontSize: 12\n  }, {\n    name: 'Plastic Recycled',\n    value: userStats.plasticRecycled * 2.5,\n    color: colors.warning,\n    legendFontColor: colors.text,\n    legendFontSize: 12\n  }, {\n    name: 'Money Saved',\n    value: userStats.moneySaved / 10,\n    color: colors.info,\n    legendFontColor: colors.text,\n    legendFontSize: 12\n  }];\n  var monthlyData = {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n    datasets: [{\n      data: [2, 4, 6, 8, 10, 12],\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return `rgba(46, 125, 50, ${opacity})`;\n      },\n      strokeWidth: 2\n    }]\n  };\n  var chartConfig = {\n    backgroundColor: colors.surface,\n    backgroundGradientFrom: colors.surface,\n    backgroundGradientTo: colors.surface,\n    decimalPlaces: 1,\n    color: function color() {\n      var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return `rgba(46, 125, 50, ${opacity})`;\n    },\n    labelColor: function labelColor() {\n      var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return `rgba(0, 0, 0, ${opacity})`;\n    },\n    style: {\n      borderRadius: 16\n    },\n    propsForDots: {\n      r: '6',\n      strokeWidth: '2',\n      stroke: colors.primary\n    }\n  };\n  var impactLevel = getImpactLevel(userStats.totalSwaps);\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    refreshControl: _jsx(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: handleRefresh\n    }),\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.headerTitle,\n        children: \"Your Environmental Impact\"\n      }), _jsx(Text, {\n        style: styles.headerSubtitle,\n        children: \"See how you're making a difference for Kenya's environment\"\n      })]\n    }), _jsx(Card, {\n      style: styles.levelCard,\n      children: _jsxs(Card.Content, {\n        children: [_jsxs(View, {\n          style: styles.levelHeader,\n          children: [_jsx(Icon, {\n            name: impactLevel.icon,\n            size: 32,\n            color: impactLevel.color\n          }), _jsxs(View, {\n            style: styles.levelInfo,\n            children: [_jsx(Text, {\n              style: styles.levelTitle,\n              children: impactLevel.level\n            }), _jsxs(Text, {\n              style: styles.levelSubtitle,\n              children: [userStats.totalSwaps, \" battery swaps completed\"]\n            })]\n          })]\n        }), _jsx(ProgressBar, {\n          progress: Math.min(userStats.totalSwaps / 100, 1),\n          color: impactLevel.color,\n          style: styles.levelProgress\n        }), _jsx(Text, {\n          style: styles.levelTarget,\n          children: userStats.totalSwaps < 100 ? `${100 - userStats.totalSwaps} more swaps to become an Eco Champion` : 'Maximum level achieved! 🏆'\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.statsGrid,\n      children: [_jsx(Card, {\n        style: styles.statCard,\n        children: _jsxs(Card.Content, {\n          style: styles.statContent,\n          children: [_jsx(Icon, {\n            name: \"eco\",\n            size: 24,\n            color: colors.success\n          }), _jsxs(Text, {\n            style: styles.statValue,\n            children: [userStats.co2Saved.toFixed(1), \" kg\"]\n          }), _jsx(Text, {\n            style: styles.statLabel,\n            children: \"CO\\u2082 Emissions Saved\"\n          }), _jsxs(Text, {\n            style: styles.statEquivalent,\n            children: [\"\\u2248 \", (userStats.co2Saved * 2.2).toFixed(0), \" trees planted\"]\n          })]\n        })\n      }), _jsx(Card, {\n        style: styles.statCard,\n        children: _jsxs(Card.Content, {\n          style: styles.statContent,\n          children: [_jsx(Icon, {\n            name: \"recycling\",\n            size: 24,\n            color: colors.warning\n          }), _jsxs(Text, {\n            style: styles.statValue,\n            children: [userStats.plasticRecycled.toFixed(1), \" kg\"]\n          }), _jsx(Text, {\n            style: styles.statLabel,\n            children: \"Plastic Recycled\"\n          }), _jsxs(Text, {\n            style: styles.statEquivalent,\n            children: [\"\\u2248 \", Math.floor(userStats.plasticRecycled * 20), \" bottles\"]\n          })]\n        })\n      }), _jsx(Card, {\n        style: styles.statCard,\n        children: _jsxs(Card.Content, {\n          style: styles.statContent,\n          children: [_jsx(Icon, {\n            name: \"account-balance-wallet\",\n            size: 24,\n            color: colors.info\n          }), _jsxs(Text, {\n            style: styles.statValue,\n            children: [\"KES \", userStats.moneySaved.toFixed(0)]\n          }), _jsx(Text, {\n            style: styles.statLabel,\n            children: \"Money Saved\"\n          }), _jsx(Text, {\n            style: styles.statEquivalent,\n            children: \"vs. fuel costs\"\n          })]\n        })\n      }), _jsx(Card, {\n        style: styles.statCard,\n        children: _jsxs(Card.Content, {\n          style: styles.statContent,\n          children: [_jsx(Icon, {\n            name: \"battery-charging-full\",\n            size: 24,\n            color: colors.primary\n          }), _jsx(Text, {\n            style: styles.statValue,\n            children: userStats.totalSwaps\n          }), _jsx(Text, {\n            style: styles.statLabel,\n            children: \"Battery Swaps\"\n          }), _jsx(Text, {\n            style: styles.statEquivalent,\n            children: \"Clean energy rides\"\n          })]\n        })\n      })]\n    }), _jsx(Card, {\n      style: styles.chartCard,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Text, {\n          style: styles.chartTitle,\n          children: \"Impact Breakdown\"\n        }), impactData.some(function (item) {\n          return item.value > 0;\n        }) ? _jsx(PieChart, {\n          data: impactData,\n          width: screenWidth - 64,\n          height: 200,\n          chartConfig: chartConfig,\n          accessor: \"value\",\n          backgroundColor: \"transparent\",\n          paddingLeft: \"15\",\n          absolute: true\n        }) : _jsxs(View, {\n          style: styles.emptyChart,\n          children: [_jsx(Icon, {\n            name: \"eco\",\n            size: 48,\n            color: colors.textSecondary\n          }), _jsx(Text, {\n            style: styles.emptyText,\n            children: \"Start using EcolithSwap to see your impact!\"\n          })]\n        })]\n      })\n    }), _jsx(Card, {\n      style: styles.chartCard,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Text, {\n          style: styles.chartTitle,\n          children: \"Monthly CO\\u2082 Savings\"\n        }), _jsx(LineChart, {\n          data: monthlyData,\n          width: screenWidth - 64,\n          height: 200,\n          chartConfig: chartConfig,\n          bezier: true,\n          style: styles.chart\n        })]\n      })\n    }), _jsx(Card, {\n      style: styles.communityCard,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Text, {\n          style: styles.cardTitle,\n          children: \"Community Leaderboard\"\n        }), _jsx(Text, {\n          style: styles.cardSubtitle,\n          children: \"Top eco-warriors this month\"\n        }), leaderboard.length > 0 ? leaderboard.map(function (user, index) {\n          return _jsxs(View, {\n            style: styles.leaderboardItem,\n            children: [_jsx(View, {\n              style: styles.leaderboardRank,\n              children: _jsx(Text, {\n                style: styles.rankNumber,\n                children: index + 1\n              })\n            }), _jsxs(View, {\n              style: styles.leaderboardInfo,\n              children: [_jsx(Text, {\n                style: styles.leaderboardName,\n                children: user.full_name || `User ${index + 1}`\n              }), _jsxs(Text, {\n                style: styles.leaderboardStats,\n                children: [user.plastic_recycled.toFixed(1), \"kg plastic \\u2022 \", user.total_swaps, \" swaps\"]\n              })]\n            }), _jsxs(View, {\n              style: styles.leaderboardBadge,\n              children: [index === 0 && _jsx(Icon, {\n                name: \"emoji-events\",\n                size: 20,\n                color: colors.warning\n              }), index === 1 && _jsx(Icon, {\n                name: \"workspace-premium\",\n                size: 20,\n                color: colors.textSecondary\n              }), index === 2 && _jsx(Icon, {\n                name: \"military-tech\",\n                size: 20,\n                color: colors.warning\n              })]\n            })]\n          }, index);\n        }) : _jsx(View, {\n          style: styles.emptyLeaderboard,\n          children: _jsx(Text, {\n            style: styles.emptyText,\n            children: \"No community data available\"\n          })\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.actionButtons,\n      children: [_jsx(Button, {\n        mode: \"contained\",\n        onPress: function onPress() {\n          return navigation.navigate('WasteTab');\n        },\n        style: [styles.actionButton, {\n          backgroundColor: colors.success\n        }],\n        icon: \"recycling\",\n        children: \"Log More Waste\"\n      }), _jsx(Button, {\n        mode: \"outlined\",\n        onPress: function onPress() {\n          return navigation.navigate('StationsTab');\n        },\n        style: styles.actionButton,\n        icon: \"location-on\",\n        children: \"Find Stations\"\n      })]\n    }), _jsx(Card, {\n      style: styles.factsCard,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Text, {\n          style: styles.cardTitle,\n          children: \"Did You Know?\"\n        }), _jsxs(View, {\n          style: styles.factItem,\n          children: [_jsx(Icon, {\n            name: \"info\",\n            size: 20,\n            color: colors.info\n          }), _jsx(Text, {\n            style: styles.factText,\n            children: \"Every kg of plastic recycled saves 2.5kg of CO\\u2082 emissions\"\n          })]\n        }), _jsxs(View, {\n          style: styles.factItem,\n          children: [_jsx(Icon, {\n            name: \"info\",\n            size: 20,\n            color: colors.info\n          }), _jsx(Text, {\n            style: styles.factText,\n            children: \"Battery swapping reduces urban air pollution by 60%\"\n          })]\n        }), _jsxs(View, {\n          style: styles.factItem,\n          children: [_jsx(Icon, {\n            name: \"info\",\n            size: 20,\n            color: colors.info\n          }), _jsx(Text, {\n            style: styles.factText,\n            children: \"Electric vehicles can reduce transport costs by up to 70%\"\n          })]\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background\n  },\n  header: {\n    backgroundColor: colors.info,\n    padding: spacing.lg,\n    paddingTop: spacing.xl\n  },\n  headerTitle: _objectSpread(_objectSpread({}, typography.h2), {}, {\n    color: 'white',\n    marginBottom: spacing.xs\n  }),\n  headerSubtitle: _objectSpread(_objectSpread({}, typography.body), {}, {\n    color: 'rgba(255, 255, 255, 0.8)'\n  }),\n  levelCard: {\n    margin: spacing.md,\n    backgroundColor: colors.surface\n  },\n  levelHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: spacing.md\n  },\n  levelInfo: {\n    marginLeft: spacing.md,\n    flex: 1\n  },\n  levelTitle: _objectSpread(_objectSpread({}, typography.h3), {}, {\n    marginBottom: spacing.xs\n  }),\n  levelSubtitle: _objectSpread(_objectSpread({}, typography.body), {}, {\n    color: colors.textSecondary\n  }),\n  levelProgress: {\n    height: 8,\n    marginBottom: spacing.sm\n  },\n  levelTarget: _objectSpread(_objectSpread({}, typography.caption), {}, {\n    textAlign: 'center',\n    color: colors.textSecondary\n  }),\n  statsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingHorizontal: spacing.md,\n    gap: spacing.sm\n  },\n  statCard: {\n    width: (screenWidth - spacing.md * 3) / 2,\n    marginBottom: spacing.sm\n  },\n  statContent: {\n    alignItems: 'center',\n    padding: spacing.md\n  },\n  statValue: _objectSpread(_objectSpread({}, typography.h3), {}, {\n    marginVertical: spacing.xs,\n    textAlign: 'center'\n  }),\n  statLabel: _objectSpread(_objectSpread({}, typography.caption), {}, {\n    textAlign: 'center',\n    marginBottom: spacing.xs\n  }),\n  statEquivalent: _objectSpread(_objectSpread({}, typography.caption), {}, {\n    textAlign: 'center',\n    color: colors.textSecondary,\n    fontStyle: 'italic'\n  }),\n  chartCard: {\n    margin: spacing.md,\n    backgroundColor: colors.surface\n  },\n  chartTitle: _objectSpread(_objectSpread({}, typography.h3), {}, {\n    marginBottom: spacing.md,\n    textAlign: 'center'\n  }),\n  chart: {\n    borderRadius: 16\n  },\n  emptyChart: {\n    alignItems: 'center',\n    paddingVertical: spacing.xl\n  },\n  emptyText: _objectSpread(_objectSpread({}, typography.body), {}, {\n    color: colors.textSecondary,\n    textAlign: 'center',\n    marginTop: spacing.md\n  }),\n  communityCard: {\n    margin: spacing.md,\n    backgroundColor: colors.surface\n  },\n  cardTitle: _objectSpread(_objectSpread({}, typography.h3), {}, {\n    marginBottom: spacing.xs\n  }),\n  cardSubtitle: _objectSpread(_objectSpread({}, typography.body), {}, {\n    color: colors.textSecondary,\n    marginBottom: spacing.md\n  }),\n  leaderboardItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: spacing.sm,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border\n  },\n  leaderboardRank: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    backgroundColor: colors.primary,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: spacing.md\n  },\n  rankNumber: _objectSpread(_objectSpread({}, typography.caption), {}, {\n    color: 'white',\n    fontWeight: 'bold'\n  }),\n  leaderboardInfo: {\n    flex: 1\n  },\n  leaderboardName: _objectSpread(_objectSpread({}, typography.body), {}, {\n    fontWeight: '600'\n  }),\n  leaderboardStats: _objectSpread(_objectSpread({}, typography.caption), {}, {\n    color: colors.textSecondary\n  }),\n  leaderboardBadge: {\n    width: 24,\n    alignItems: 'center'\n  },\n  emptyLeaderboard: {\n    alignItems: 'center',\n    paddingVertical: spacing.lg\n  },\n  actionButtons: {\n    paddingHorizontal: spacing.md,\n    gap: spacing.md\n  },\n  actionButton: {\n    marginBottom: spacing.sm\n  },\n  factsCard: {\n    margin: spacing.md,\n    marginBottom: spacing.xxl,\n    backgroundColor: colors.surface\n  },\n  factItem: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginBottom: spacing.md,\n    gap: spacing.md\n  },\n  factText: _objectSpread(_objectSpread({}, typography.body), {}, {\n    flex: 1,\n    lineHeight: 20\n  })\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ScrollView","Dimensions","RefreshControl","Card","ProgressBar","Button","LineChart","PieChart","BarChart","Icon","useData","wasteService","colors","typography","spacing","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","ImpactScreen","_ref","navigation","_useData","userStats","isOnline","_useState","_useState2","_slicedToArray","impactStats","setImpactStats","_useState3","_useState4","leaderboard","setLeaderboard","_useState5","_useState6","loading","setLoading","_useState7","_useState8","refreshing","setRefreshing","loadImpactData","_ref2","_asyncToGenerator","_yield$Promise$all","Promise","all","getImpactStats","getLeaderboard","_yield$Promise$all2","impact","leaders","error","console","apply","arguments","handleRefresh","_ref3","getImpactLevel","totalSwaps","level","color","success","icon","info","warning","primary","textSecondary","impactData","name","value","co2Saved","legendFontColor","text","legendFontSize","plasticRecycled","moneySaved","monthlyData","labels","datasets","data","opacity","length","undefined","strokeWidth","chartConfig","backgroundColor","surface","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","style","borderRadius","propsForDots","r","stroke","impactLevel","styles","container","refreshControl","onRefresh","children","header","headerTitle","headerSubtitle","levelCard","Content","levelHeader","size","levelInfo","levelTitle","levelSubtitle","progress","Math","min","levelProgress","levelTarget","statsGrid","statCard","statContent","statValue","toFixed","statLabel","statEquivalent","floor","chartCard","chartTitle","some","item","height","accessor","paddingLeft","absolute","emptyChart","emptyText","bezier","chart","communityCard","cardTitle","cardSubtitle","map","user","index","leaderboardItem","leaderboardRank","rankNumber","leaderboardInfo","leaderboardName","full_name","leaderboardStats","plastic_recycled","total_swaps","leaderboardBadge","emptyLeaderboard","actionButtons","mode","onPress","navigate","actionButton","factsCard","factItem","factText","create","flex","background","padding","lg","paddingTop","xl","_objectSpread","h2","marginBottom","xs","body","margin","md","flexDirection","alignItems","marginLeft","h3","sm","caption","textAlign","flexWrap","paddingHorizontal","gap","marginVertical","fontStyle","paddingVertical","marginTop","borderBottomWidth","borderBottomColor","border","justifyContent","marginRight","fontWeight","xxl","lineHeight"],"sources":["C:/Users/User/Desktop/Ecolith Promps/V3/EcolithSwap/src/screens/ImpactScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  Dimensions,\n  RefreshControl,\n} from 'react-native';\nimport { Card, ProgressBar, Button } from 'react-native-paper';\nimport { LineChart, PieChart, BarChart } from 'react-native-chart-kit';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport { useData } from '../contexts/DataContext';\nimport { wasteService } from '../services/wasteService';\nimport { colors, typography, spacing } from '../utils/theme';\n\nconst { width: screenWidth } = Dimensions.get('window');\n\nexport default function ImpactScreen({ navigation }) {\n  const { userStats, isOnline } = useData();\n  const [impactStats, setImpactStats] = useState(null);\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n\n  useEffect(() => {\n    loadImpactData();\n  }, []);\n\n  const loadImpactData = async () => {\n    try {\n      setLoading(true);\n      if (isOnline) {\n        const [impact, leaders] = await Promise.all([\n          wasteService.getImpactStats(),\n          wasteService.getLeaderboard(5),\n        ]);\n        setImpactStats(impact);\n        setLeaderboard(leaders);\n      }\n    } catch (error) {\n      console.error('Error loading impact data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRefresh = async () => {\n    setRefreshing(true);\n    await loadImpactData();\n    setRefreshing(false);\n  };\n\n  const getImpactLevel = (totalSwaps) => {\n    if (totalSwaps >= 100) return { level: 'Eco Champion', color: colors.success, icon: 'eco' };\n    if (totalSwaps >= 50) return { level: 'Green Warrior', color: colors.info, icon: 'nature' };\n    if (totalSwaps >= 20) return { level: 'Eco Enthusiast', color: colors.warning, icon: 'spa' };\n    if (totalSwaps >= 5) return { level: 'Green Starter', color: colors.primary, icon: 'local_florist' };\n    return { level: 'Beginner', color: colors.textSecondary, icon: 'eco' };\n  };\n\n  // Chart data\n  const impactData = [\n    {\n      name: 'CO₂ Saved',\n      value: userStats.co2Saved,\n      color: colors.success,\n      legendFontColor: colors.text,\n      legendFontSize: 12,\n    },\n    {\n      name: 'Plastic Recycled',\n      value: userStats.plasticRecycled * 2.5, // Normalize for visualization\n      color: colors.warning,\n      legendFontColor: colors.text,\n      legendFontSize: 12,\n    },\n    {\n      name: 'Money Saved',\n      value: userStats.moneySaved / 10, // Normalize for visualization\n      color: colors.info,\n      legendFontColor: colors.text,\n      legendFontSize: 12,\n    },\n  ];\n\n  const monthlyData = {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n    datasets: [\n      {\n        data: [2, 4, 6, 8, 10, 12], // Sample data - replace with actual monthly data\n        color: (opacity = 1) => `rgba(46, 125, 50, ${opacity})`,\n        strokeWidth: 2,\n      },\n    ],\n  };\n\n  const chartConfig = {\n    backgroundColor: colors.surface,\n    backgroundGradientFrom: colors.surface,\n    backgroundGradientTo: colors.surface,\n    decimalPlaces: 1,\n    color: (opacity = 1) => `rgba(46, 125, 50, ${opacity})`,\n    labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\n    style: {\n      borderRadius: 16,\n    },\n    propsForDots: {\n      r: '6',\n      strokeWidth: '2',\n      stroke: colors.primary,\n    },\n  };\n\n  const impactLevel = getImpactLevel(userStats.totalSwaps);\n\n  return (\n    <ScrollView\n      style={styles.container}\n      refreshControl={\n        <RefreshControl refreshing={refreshing} onRefresh={handleRefresh} />\n      }\n    >\n      {/* Header */}\n      <View style={styles.header}>\n        <Text style={styles.headerTitle}>Your Environmental Impact</Text>\n        <Text style={styles.headerSubtitle}>\n          See how you're making a difference for Kenya's environment\n        </Text>\n      </View>\n\n      {/* Impact Level */}\n      <Card style={styles.levelCard}>\n        <Card.Content>\n          <View style={styles.levelHeader}>\n            <Icon name={impactLevel.icon} size={32} color={impactLevel.color} />\n            <View style={styles.levelInfo}>\n              <Text style={styles.levelTitle}>{impactLevel.level}</Text>\n              <Text style={styles.levelSubtitle}>\n                {userStats.totalSwaps} battery swaps completed\n              </Text>\n            </View>\n          </View>\n          \n          <ProgressBar\n            progress={Math.min(userStats.totalSwaps / 100, 1)}\n            color={impactLevel.color}\n            style={styles.levelProgress}\n          />\n          \n          <Text style={styles.levelTarget}>\n            {userStats.totalSwaps < 100 \n              ? `${100 - userStats.totalSwaps} more swaps to become an Eco Champion`\n              : 'Maximum level achieved! 🏆'\n            }\n          </Text>\n        </Card.Content>\n      </Card>\n\n      {/* Impact Stats Grid */}\n      <View style={styles.statsGrid}>\n        <Card style={styles.statCard}>\n          <Card.Content style={styles.statContent}>\n            <Icon name=\"eco\" size={24} color={colors.success} />\n            <Text style={styles.statValue}>{userStats.co2Saved.toFixed(1)} kg</Text>\n            <Text style={styles.statLabel}>CO₂ Emissions Saved</Text>\n            <Text style={styles.statEquivalent}>\n              ≈ {(userStats.co2Saved * 2.2).toFixed(0)} trees planted\n            </Text>\n          </Card.Content>\n        </Card>\n\n        <Card style={styles.statCard}>\n          <Card.Content style={styles.statContent}>\n            <Icon name=\"recycling\" size={24} color={colors.warning} />\n            <Text style={styles.statValue}>{userStats.plasticRecycled.toFixed(1)} kg</Text>\n            <Text style={styles.statLabel}>Plastic Recycled</Text>\n            <Text style={styles.statEquivalent}>\n              ≈ {Math.floor(userStats.plasticRecycled * 20)} bottles\n            </Text>\n          </Card.Content>\n        </Card>\n\n        <Card style={styles.statCard}>\n          <Card.Content style={styles.statContent}>\n            <Icon name=\"account-balance-wallet\" size={24} color={colors.info} />\n            <Text style={styles.statValue}>KES {userStats.moneySaved.toFixed(0)}</Text>\n            <Text style={styles.statLabel}>Money Saved</Text>\n            <Text style={styles.statEquivalent}>\n              vs. fuel costs\n            </Text>\n          </Card.Content>\n        </Card>\n\n        <Card style={styles.statCard}>\n          <Card.Content style={styles.statContent}>\n            <Icon name=\"battery-charging-full\" size={24} color={colors.primary} />\n            <Text style={styles.statValue}>{userStats.totalSwaps}</Text>\n            <Text style={styles.statLabel}>Battery Swaps</Text>\n            <Text style={styles.statEquivalent}>\n              Clean energy rides\n            </Text>\n          </Card.Content>\n        </Card>\n      </View>\n\n      {/* Impact Breakdown Chart */}\n      <Card style={styles.chartCard}>\n        <Card.Content>\n          <Text style={styles.chartTitle}>Impact Breakdown</Text>\n          {impactData.some(item => item.value > 0) ? (\n            <PieChart\n              data={impactData}\n              width={screenWidth - 64}\n              height={200}\n              chartConfig={chartConfig}\n              accessor=\"value\"\n              backgroundColor=\"transparent\"\n              paddingLeft=\"15\"\n              absolute\n            />\n          ) : (\n            <View style={styles.emptyChart}>\n              <Icon name=\"eco\" size={48} color={colors.textSecondary} />\n              <Text style={styles.emptyText}>Start using EcolithSwap to see your impact!</Text>\n            </View>\n          )}\n        </Card.Content>\n      </Card>\n\n      {/* Monthly Progress */}\n      <Card style={styles.chartCard}>\n        <Card.Content>\n          <Text style={styles.chartTitle}>Monthly CO₂ Savings</Text>\n          <LineChart\n            data={monthlyData}\n            width={screenWidth - 64}\n            height={200}\n            chartConfig={chartConfig}\n            bezier\n            style={styles.chart}\n          />\n        </Card.Content>\n      </Card>\n\n      {/* Community Impact */}\n      <Card style={styles.communityCard}>\n        <Card.Content>\n          <Text style={styles.cardTitle}>Community Leaderboard</Text>\n          <Text style={styles.cardSubtitle}>Top eco-warriors this month</Text>\n          \n          {leaderboard.length > 0 ? (\n            leaderboard.map((user, index) => (\n              <View key={index} style={styles.leaderboardItem}>\n                <View style={styles.leaderboardRank}>\n                  <Text style={styles.rankNumber}>{index + 1}</Text>\n                </View>\n                <View style={styles.leaderboardInfo}>\n                  <Text style={styles.leaderboardName}>\n                    {user.full_name || `User ${index + 1}`}\n                  </Text>\n                  <Text style={styles.leaderboardStats}>\n                    {user.plastic_recycled.toFixed(1)}kg plastic • {user.total_swaps} swaps\n                  </Text>\n                </View>\n                <View style={styles.leaderboardBadge}>\n                  {index === 0 && <Icon name=\"emoji-events\" size={20} color={colors.warning} />}\n                  {index === 1 && <Icon name=\"workspace-premium\" size={20} color={colors.textSecondary} />}\n                  {index === 2 && <Icon name=\"military-tech\" size={20} color={colors.warning} />}\n                </View>\n              </View>\n            ))\n          ) : (\n            <View style={styles.emptyLeaderboard}>\n              <Text style={styles.emptyText}>No community data available</Text>\n            </View>\n          )}\n        </Card.Content>\n      </Card>\n\n      {/* Action Buttons */}\n      <View style={styles.actionButtons}>\n        <Button\n          mode=\"contained\"\n          onPress={() => navigation.navigate('WasteTab')}\n          style={[styles.actionButton, { backgroundColor: colors.success }]}\n          icon=\"recycling\"\n        >\n          Log More Waste\n        </Button>\n        \n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.navigate('StationsTab')}\n          style={styles.actionButton}\n          icon=\"location-on\"\n        >\n          Find Stations\n        </Button>\n      </View>\n\n      {/* Environmental Facts */}\n      <Card style={styles.factsCard}>\n        <Card.Content>\n          <Text style={styles.cardTitle}>Did You Know?</Text>\n          \n          <View style={styles.factItem}>\n            <Icon name=\"info\" size={20} color={colors.info} />\n            <Text style={styles.factText}>\n              Every kg of plastic recycled saves 2.5kg of CO₂ emissions\n            </Text>\n          </View>\n          \n          <View style={styles.factItem}>\n            <Icon name=\"info\" size={20} color={colors.info} />\n            <Text style={styles.factText}>\n              Battery swapping reduces urban air pollution by 60%\n            </Text>\n          </View>\n          \n          <View style={styles.factItem}>\n            <Icon name=\"info\" size={20} color={colors.info} />\n            <Text style={styles.factText}>\n              Electric vehicles can reduce transport costs by up to 70%\n            </Text>\n          </View>\n        </Card.Content>\n      </Card>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background,\n  },\n  header: {\n    backgroundColor: colors.info,\n    padding: spacing.lg,\n    paddingTop: spacing.xl,\n  },\n  headerTitle: {\n    ...typography.h2,\n    color: 'white',\n    marginBottom: spacing.xs,\n  },\n  headerSubtitle: {\n    ...typography.body,\n    color: 'rgba(255, 255, 255, 0.8)',\n  },\n  levelCard: {\n    margin: spacing.md,\n    backgroundColor: colors.surface,\n  },\n  levelHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: spacing.md,\n  },\n  levelInfo: {\n    marginLeft: spacing.md,\n    flex: 1,\n  },\n  levelTitle: {\n    ...typography.h3,\n    marginBottom: spacing.xs,\n  },\n  levelSubtitle: {\n    ...typography.body,\n    color: colors.textSecondary,\n  },\n  levelProgress: {\n    height: 8,\n    marginBottom: spacing.sm,\n  },\n  levelTarget: {\n    ...typography.caption,\n    textAlign: 'center',\n    color: colors.textSecondary,\n  },\n  statsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingHorizontal: spacing.md,\n    gap: spacing.sm,\n  },\n  statCard: {\n    width: (screenWidth - spacing.md * 3) / 2,\n    marginBottom: spacing.sm,\n  },\n  statContent: {\n    alignItems: 'center',\n    padding: spacing.md,\n  },\n  statValue: {\n    ...typography.h3,\n    marginVertical: spacing.xs,\n    textAlign: 'center',\n  },\n  statLabel: {\n    ...typography.caption,\n    textAlign: 'center',\n    marginBottom: spacing.xs,\n  },\n  statEquivalent: {\n    ...typography.caption,\n    textAlign: 'center',\n    color: colors.textSecondary,\n    fontStyle: 'italic',\n  },\n  chartCard: {\n    margin: spacing.md,\n    backgroundColor: colors.surface,\n  },\n  chartTitle: {\n    ...typography.h3,\n    marginBottom: spacing.md,\n    textAlign: 'center',\n  },\n  chart: {\n    borderRadius: 16,\n  },\n  emptyChart: {\n    alignItems: 'center',\n    paddingVertical: spacing.xl,\n  },\n  emptyText: {\n    ...typography.body,\n    color: colors.textSecondary,\n    textAlign: 'center',\n    marginTop: spacing.md,\n  },\n  communityCard: {\n    margin: spacing.md,\n    backgroundColor: colors.surface,\n  },\n  cardTitle: {\n    ...typography.h3,\n    marginBottom: spacing.xs,\n  },\n  cardSubtitle: {\n    ...typography.body,\n    color: colors.textSecondary,\n    marginBottom: spacing.md,\n  },\n  leaderboardItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: spacing.sm,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border,\n  },\n  leaderboardRank: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    backgroundColor: colors.primary,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: spacing.md,\n  },\n  rankNumber: {\n    ...typography.caption,\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  leaderboardInfo: {\n    flex: 1,\n  },\n  leaderboardName: {\n    ...typography.body,\n    fontWeight: '600',\n  },\n  leaderboardStats: {\n    ...typography.caption,\n    color: colors.textSecondary,\n  },\n  leaderboardBadge: {\n    width: 24,\n    alignItems: 'center',\n  },\n  emptyLeaderboard: {\n    alignItems: 'center',\n    paddingVertical: spacing.lg,\n  },\n  actionButtons: {\n    paddingHorizontal: spacing.md,\n    gap: spacing.md,\n  },\n  actionButton: {\n    marginBottom: spacing.sm,\n  },\n  factsCard: {\n    margin: spacing.md,\n    marginBottom: spacing.xxl,\n    backgroundColor: colors.surface,\n  },\n  factItem: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginBottom: spacing.md,\n    gap: spacing.md,\n  },\n  factText: {\n    ...typography.body,\n    flex: 1,\n    lineHeight: 20,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}