{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { Ionicons } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Location from 'expo-location';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useData } from \"../contexts/DataContext\";\nimport wasteService from \"../services/wasteService\";\nimport { theme } from \"../utils/theme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EnhancedPlasticWasteScreen = function EnhancedPlasticWasteScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var _useData = useData(),\n    stations = _useData.stations;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    refreshing = _useState2[0],\n    setRefreshing = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState({\n      plastic_type: '',\n      weight_kg: '',\n      photos: [],\n      station_id: '',\n      notes: '',\n      location: null\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    submissionData = _useState6[0],\n    setSubmissionData = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showTypeModal = _useState8[0],\n    setShowTypeModal = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    showStationModal = _useState0[0],\n    setShowStationModal = _useState0[1];\n  var _useState1 = useState(false),\n    _useState10 = _slicedToArray(_useState1, 2),\n    showPhotoModal = _useState10[0],\n    setShowPhotoModal = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    selectedPhoto = _useState12[0],\n    setSelectedPhoto = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    wasteHistory = _useState14[0],\n    setWasteHistory = _useState14[1];\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    userStats = _useState16[0],\n    setUserStats = _useState16[1];\n  var _useState17 = useState([]),\n    _useState18 = _slicedToArray(_useState17, 2),\n    wasteBreakdown = _useState18[0],\n    setWasteBreakdown = _useState18[1];\n  var _useState19 = useState([]),\n    _useState20 = _slicedToArray(_useState19, 2),\n    plasticStations = _useState20[0],\n    setPlasticStations = _useState20[1];\n  useEffect(function () {\n    loadWasteData();\n    getCurrentLocation();\n    filterPlasticStations();\n  }, [stations]);\n  var loadWasteData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var _yield$Promise$all = yield Promise.all([wasteService.getWasteHistory({\n            limit: 20\n          }), wasteService.getWasteStats(), wasteService.getWasteBreakdown()]),\n          _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3),\n          history = _yield$Promise$all2[0],\n          stats = _yield$Promise$all2[1],\n          breakdown = _yield$Promise$all2[2];\n        setWasteHistory(history || []);\n        setUserStats(stats);\n        setWasteBreakdown(breakdown || []);\n      } catch (error) {\n        console.error('Error loading waste data:', error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function loadWasteData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var getCurrentLocation = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n          status = _yield$Location$reque.status;\n        if (status === 'granted') {\n          var location = yield Location.getCurrentPositionAsync({});\n          setSubmissionData(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              location: {\n                latitude: location.coords.latitude,\n                longitude: location.coords.longitude\n              }\n            });\n          });\n        }\n      } catch (error) {\n        console.error('Error getting location:', error);\n      }\n    });\n    return function getCurrentLocation() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var filterPlasticStations = function filterPlasticStations() {\n    var filtered = stations.filter(function (station) {\n      return station.accepts_plastic;\n    });\n    setPlasticStations(filtered);\n  };\n  var onRefresh = useCallback(_asyncToGenerator(function* () {\n    setRefreshing(true);\n    yield loadWasteData();\n    setRefreshing(false);\n  }), []);\n  var handleTakePhoto = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      var _yield$ImagePicker$re = yield ImagePicker.requestCameraPermissionsAsync(),\n        status = _yield$ImagePicker$re.status;\n      if (status !== 'granted') {\n        Alert.alert('Permission Required', 'Please allow camera access to take photos.');\n        return;\n      }\n      var result = yield ImagePicker.launchCameraAsync({\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 0.8\n      });\n      if (!result.canceled) {\n        setSubmissionData(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            photos: [].concat(_toConsumableArray(prev.photos), [result.assets[0]])\n          });\n        });\n      }\n    });\n    return function handleTakePhoto() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleSelectFromGallery = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      var _yield$ImagePicker$re2 = yield ImagePicker.requestMediaLibraryPermissionsAsync(),\n        status = _yield$ImagePicker$re2.status;\n      if (status !== 'granted') {\n        Alert.alert('Permission Required', 'Please allow photo library access.');\n        return;\n      }\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsMultipleSelection: true,\n        quality: 0.8\n      });\n      if (!result.canceled) {\n        setSubmissionData(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            photos: [].concat(_toConsumableArray(prev.photos), _toConsumableArray(result.assets))\n          });\n        });\n      }\n    });\n    return function handleSelectFromGallery() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var removePhoto = function removePhoto(index) {\n    setSubmissionData(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        photos: prev.photos.filter(function (_, i) {\n          return i !== index;\n        })\n      });\n    });\n  };\n  var handleSubmitWaste = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      var validation = wasteService.validateSubmissionData(submissionData);\n      if (!validation.isValid) {\n        Alert.alert('Validation Error', validation.errors.join('\\n'));\n        return;\n      }\n      if (submissionData.photos.length === 0) {\n        Alert.alert('Photos Required', 'Please add at least one photo of your plastic waste.');\n        return;\n      }\n      try {\n        setLoading(true);\n        var formData = new FormData();\n        formData.append('waste_type', submissionData.plastic_type);\n        formData.append('weight_kg', submissionData.weight_kg);\n        formData.append('station_id', submissionData.station_id);\n        formData.append('notes', submissionData.notes);\n        if (submissionData.location) {\n          formData.append('latitude', submissionData.location.latitude.toString());\n          formData.append('longitude', submissionData.location.longitude.toString());\n        }\n        submissionData.photos.forEach(function (photo, index) {\n          formData.append('photos', {\n            uri: photo.uri,\n            type: 'image/jpeg',\n            name: `waste_photo_${index}.jpg`\n          });\n        });\n        var result = yield wasteService.submitWaste(formData);\n        var estimatedCredits = wasteService.calculateCredits(submissionData.plastic_type, parseFloat(submissionData.weight_kg));\n        Alert.alert('Submission Successful!', `Your plastic waste submission has been recorded.\\n\\nWeight: ${submissionData.weight_kg} kg\\nEstimated Credits: ${estimatedCredits} KES\\n\\nIt will be verified within 24 hours.`, [{\n          text: 'Submit More',\n          onPress: function onPress() {\n            setSubmissionData({\n              plastic_type: '',\n              weight_kg: '',\n              photos: [],\n              station_id: '',\n              notes: '',\n              location: submissionData.location\n            });\n          }\n        }, {\n          text: 'View History',\n          onPress: function onPress() {\n            return navigation.navigate('WasteHistory');\n          }\n        }]);\n        yield loadWasteData();\n      } catch (error) {\n        Alert.alert('Submission Failed', error.message || 'Failed to submit plastic waste.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleSubmitWaste() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var renderStats = function renderStats() {\n    var _userStats$totalWeigh, _userStats$co2Saved;\n    return _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Your Impact\"\n      }), _jsxs(View, {\n        style: styles.statsGrid,\n        children: [_jsxs(View, {\n          style: styles.statCard,\n          children: [_jsxs(Text, {\n            style: styles.statValue,\n            children: [(userStats == null ? void 0 : (_userStats$totalWeigh = userStats.totalWeight) == null ? void 0 : _userStats$totalWeigh.toFixed(1)) || '0', \" kg\"]\n          }), _jsx(Text, {\n            style: styles.statLabel,\n            children: \"Total Recycled\"\n          })]\n        }), _jsxs(View, {\n          style: styles.statCard,\n          children: [_jsx(Text, {\n            style: styles.statValue,\n            children: (userStats == null ? void 0 : userStats.totalCredits) || 0\n          }), _jsx(Text, {\n            style: styles.statLabel,\n            children: \"Credits Earned\"\n          })]\n        }), _jsxs(View, {\n          style: styles.statCard,\n          children: [_jsx(Text, {\n            style: styles.statValue,\n            children: (userStats == null ? void 0 : userStats.totalSubmissions) || 0\n          }), _jsx(Text, {\n            style: styles.statLabel,\n            children: \"Submissions\"\n          })]\n        }), _jsxs(View, {\n          style: styles.statCard,\n          children: [_jsxs(Text, {\n            style: styles.statValue,\n            children: [(userStats == null ? void 0 : (_userStats$co2Saved = userStats.co2Saved) == null ? void 0 : _userStats$co2Saved.toFixed(1)) || '0', \" kg\"]\n          }), _jsx(Text, {\n            style: styles.statLabel,\n            children: \"CO\\u2082 Saved\"\n          })]\n        })]\n      })]\n    });\n  };\n  var renderSubmissionForm = function renderSubmissionForm() {\n    var _plasticStations$find;\n    return _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Submit Plastic Waste\"\n      }), _jsxs(View, {\n        style: styles.formGroup,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Plastic Type *\"\n        }), _jsxs(TouchableOpacity, {\n          style: styles.selector,\n          onPress: function onPress() {\n            return setShowTypeModal(true);\n          },\n          children: [_jsx(Text, {\n            style: [styles.selectorText, !submissionData.plastic_type && styles.placeholder],\n            children: submissionData.plastic_type ? wasteService.getWasteTypeInfo(submissionData.plastic_type).name : 'Select plastic type'\n          }), _jsx(Ionicons, {\n            name: \"chevron-down\",\n            size: 20,\n            color: theme.colors.gray\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.formGroup,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Weight (kg) *\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: submissionData.weight_kg,\n          onChangeText: function onChangeText(text) {\n            return setSubmissionData(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                weight_kg: text\n              });\n            });\n          },\n          placeholder: \"e.g., 2.5\",\n          keyboardType: \"decimal-pad\"\n        })]\n      }), _jsxs(View, {\n        style: styles.formGroup,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Drop-off Station *\"\n        }), _jsxs(TouchableOpacity, {\n          style: styles.selector,\n          onPress: function onPress() {\n            return setShowStationModal(true);\n          },\n          children: [_jsx(Text, {\n            style: [styles.selectorText, !submissionData.station_id && styles.placeholder],\n            children: submissionData.station_id ? (_plasticStations$find = plasticStations.find(function (s) {\n              return s.id === submissionData.station_id;\n            })) == null ? void 0 : _plasticStations$find.name : 'Select station'\n          }), _jsx(Ionicons, {\n            name: \"chevron-down\",\n            size: 20,\n            color: theme.colors.gray\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.formGroup,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Photos *\"\n        }), _jsxs(View, {\n          style: styles.photoGrid,\n          children: [submissionData.photos.map(function (photo, index) {\n            return _jsxs(View, {\n              style: styles.photoContainer,\n              children: [_jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return setSelectedPhoto(photo);\n                },\n                children: _jsx(Image, {\n                  source: {\n                    uri: photo.uri\n                  },\n                  style: styles.photoThumbnail\n                })\n              }), _jsx(TouchableOpacity, {\n                style: styles.removePhotoButton,\n                onPress: function onPress() {\n                  return removePhoto(index);\n                },\n                children: _jsx(Ionicons, {\n                  name: \"close-circle\",\n                  size: 20,\n                  color: theme.colors.error\n                })\n              })]\n            }, index);\n          }), _jsxs(TouchableOpacity, {\n            style: styles.addPhotoButton,\n            onPress: function onPress() {\n              return setShowPhotoModal(true);\n            },\n            children: [_jsx(Ionicons, {\n              name: \"camera\",\n              size: 24,\n              color: theme.colors.gray\n            }), _jsx(Text, {\n              style: styles.addPhotoText,\n              children: \"Add Photo\"\n            })]\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.formGroup,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Notes (Optional)\"\n        }), _jsx(TextInput, {\n          style: [styles.input, styles.textArea],\n          value: submissionData.notes,\n          onChangeText: function onChangeText(text) {\n            return setSubmissionData(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                notes: text\n              });\n            });\n          },\n          placeholder: \"Additional information about your submission...\",\n          multiline: true,\n          numberOfLines: 3\n        })]\n      }), submissionData.plastic_type && submissionData.weight_kg && _jsxs(View, {\n        style: styles.estimatedCredits,\n        children: [_jsx(Text, {\n          style: styles.estimatedLabel,\n          children: \"Estimated Credits:\"\n        }), _jsxs(Text, {\n          style: styles.estimatedValue,\n          children: [wasteService.calculateCredits(submissionData.plastic_type, parseFloat(submissionData.weight_kg) || 0), \" KES\"]\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: [styles.submitButton, (!submissionData.plastic_type || !submissionData.weight_kg || !submissionData.station_id || submissionData.photos.length === 0) && styles.disabledButton],\n        onPress: handleSubmitWaste,\n        disabled: loading || !submissionData.plastic_type || !submissionData.weight_kg || !submissionData.station_id || submissionData.photos.length === 0,\n        children: _jsx(Text, {\n          style: styles.submitButtonText,\n          children: loading ? 'Submitting...' : 'Submit Plastic Waste'\n        })\n      })]\n    });\n  };\n  var renderRecentSubmissions = function renderRecentSubmissions() {\n    return _jsxs(View, {\n      style: styles.section,\n      children: [_jsxs(View, {\n        style: styles.sectionHeader,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Recent Submissions\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('WasteHistory');\n          },\n          children: _jsx(Text, {\n            style: styles.seeAllText,\n            children: \"See All\"\n          })\n        })]\n      }), wasteHistory.length === 0 ? _jsxs(View, {\n        style: styles.emptyState,\n        children: [_jsx(Ionicons, {\n          name: \"leaf-outline\",\n          size: 48,\n          color: theme.colors.gray\n        }), _jsx(Text, {\n          style: styles.emptyText,\n          children: \"No submissions yet\"\n        })]\n      }) : wasteHistory.slice(0, 3).map(function (submission) {\n        return _jsxs(TouchableOpacity, {\n          style: styles.submissionItem,\n          onPress: function onPress() {\n            return navigation.navigate('WasteDetails', {\n              submission: submission\n            });\n          },\n          children: [_jsxs(View, {\n            style: styles.submissionContent,\n            children: [_jsxs(View, {\n              style: styles.submissionHeader,\n              children: [_jsx(Text, {\n                style: styles.submissionType,\n                children: wasteService.getWasteTypeInfo(submission.plastic_type).name\n              }), _jsx(Text, {\n                style: styles.submissionDate,\n                children: new Date(submission.submitted_at).toLocaleDateString()\n              })]\n            }), _jsxs(Text, {\n              style: styles.submissionWeight,\n              children: [submission.weight_kg, \" kg \\u2022 \", submission.station_name]\n            }), _jsxs(View, {\n              style: styles.submissionFooter,\n              children: [_jsx(View, {\n                style: [styles.statusBadge, submission.verification_status === 'verified' ? styles.verifiedStatus : submission.verification_status === 'pending_verification' ? styles.pendingStatus : styles.rejectedStatus],\n                children: _jsx(Text, {\n                  style: styles.statusText,\n                  children: wasteService.formatWasteStatus(submission.verification_status)\n                })\n              }), _jsxs(Text, {\n                style: styles.submissionCredits,\n                children: [submission.credits_earned || 0, \" KES\"]\n              })]\n            })]\n          }), _jsx(Ionicons, {\n            name: \"chevron-forward\",\n            size: 20,\n            color: theme.colors.gray\n          })]\n        }, submission.id);\n      })]\n    });\n  };\n  var renderTypeModal = function renderTypeModal() {\n    return _jsx(Modal, {\n      visible: showTypeModal,\n      animationType: \"slide\",\n      presentationStyle: \"formSheet\",\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsxs(View, {\n          style: styles.modalHeader,\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return setShowTypeModal(false);\n            },\n            children: _jsx(Text, {\n              style: styles.cancelButton,\n              children: \"Cancel\"\n            })\n          }), _jsx(Text, {\n            style: styles.modalTitle,\n            children: \"Select Plastic Type\"\n          }), _jsx(View, {\n            style: styles.placeholder\n          })]\n        }), _jsx(ScrollView, {\n          style: styles.modalContent,\n          children: wasteService.getAllWasteTypes().map(function (type) {\n            var typeInfo = wasteService.getWasteTypeInfo(type.value);\n            return _jsxs(TouchableOpacity, {\n              style: styles.typeOption,\n              onPress: function onPress() {\n                setSubmissionData(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    plastic_type: type.value\n                  });\n                });\n                setShowTypeModal(false);\n              },\n              children: [_jsxs(View, {\n                style: styles.typeOptionContent,\n                children: [_jsx(Text, {\n                  style: styles.typeName,\n                  children: typeInfo.name\n                }), _jsx(Text, {\n                  style: styles.typeDescription,\n                  children: typeInfo.description\n                }), _jsxs(Text, {\n                  style: styles.typeRate,\n                  children: [typeInfo.creditRate, \" KES per kg\"]\n                })]\n              }), _jsx(View, {\n                style: styles.typeExamples,\n                children: typeInfo.examples.map(function (example, index) {\n                  return _jsxs(Text, {\n                    style: styles.exampleText,\n                    children: [\"\\u2022 \", example]\n                  }, index);\n                })\n              })]\n            }, type.value);\n          })\n        })]\n      })\n    });\n  };\n  var renderStationModal = function renderStationModal() {\n    return _jsx(Modal, {\n      visible: showStationModal,\n      animationType: \"slide\",\n      presentationStyle: \"formSheet\",\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsxs(View, {\n          style: styles.modalHeader,\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return setShowStationModal(false);\n            },\n            children: _jsx(Text, {\n              style: styles.cancelButton,\n              children: \"Cancel\"\n            })\n          }), _jsx(Text, {\n            style: styles.modalTitle,\n            children: \"Select Station\"\n          }), _jsx(View, {\n            style: styles.placeholder\n          })]\n        }), _jsx(ScrollView, {\n          style: styles.modalContent,\n          children: plasticStations.map(function (station) {\n            return _jsxs(TouchableOpacity, {\n              style: styles.stationOption,\n              onPress: function onPress() {\n                setSubmissionData(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    station_id: station.id\n                  });\n                });\n                setShowStationModal(false);\n              },\n              children: [_jsx(Text, {\n                style: styles.stationName,\n                children: station.name\n              }), _jsx(Text, {\n                style: styles.stationAddress,\n                children: station.address\n              }), _jsxs(Text, {\n                style: styles.stationHours,\n                children: [\"Hours: \", station.operating_hours]\n              })]\n            }, station.id);\n          })\n        })]\n      })\n    });\n  };\n  var renderPhotoModal = function renderPhotoModal() {\n    return _jsx(Modal, {\n      visible: showPhotoModal,\n      animationType: \"slide\",\n      presentationStyle: \"formSheet\",\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsxs(View, {\n          style: styles.modalHeader,\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return setShowPhotoModal(false);\n            },\n            children: _jsx(Text, {\n              style: styles.cancelButton,\n              children: \"Cancel\"\n            })\n          }), _jsx(Text, {\n            style: styles.modalTitle,\n            children: \"Add Photo\"\n          }), _jsx(View, {\n            style: styles.placeholder\n          })]\n        }), _jsxs(View, {\n          style: styles.photoModalContent,\n          children: [_jsxs(TouchableOpacity, {\n            style: styles.photoOption,\n            onPress: handleTakePhoto,\n            children: [_jsx(Ionicons, {\n              name: \"camera\",\n              size: 32,\n              color: theme.colors.primary\n            }), _jsx(Text, {\n              style: styles.photoOptionText,\n              children: \"Take Photo\"\n            })]\n          }), _jsxs(TouchableOpacity, {\n            style: styles.photoOption,\n            onPress: handleSelectFromGallery,\n            children: [_jsx(Ionicons, {\n              name: \"images\",\n              size: 32,\n              color: theme.colors.primary\n            }), _jsx(Text, {\n              style: styles.photoOptionText,\n              children: \"Choose from Gallery\"\n            })]\n          })]\n        })]\n      })\n    });\n  };\n  var renderFullSizePhotoModal = function renderFullSizePhotoModal() {\n    return _jsx(Modal, {\n      visible: !!selectedPhoto,\n      animationType: \"fade\",\n      children: _jsxs(View, {\n        style: styles.fullPhotoContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.closeFullPhotoButton,\n          onPress: function onPress() {\n            return setSelectedPhoto(null);\n          },\n          children: _jsx(Ionicons, {\n            name: \"close\",\n            size: 32,\n            color: theme.colors.white\n          })\n        }), selectedPhoto && _jsx(Image, {\n          source: {\n            uri: selectedPhoto.uri\n          },\n          style: styles.fullSizePhoto\n        })]\n      })\n    });\n  };\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    refreshControl: _jsx(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh\n    }),\n    children: [renderStats(), renderSubmissionForm(), renderRecentSubmissions(), renderTypeModal(), renderStationModal(), renderPhotoModal(), renderFullSizePhotoModal()]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background\n  },\n  section: {\n    padding: 20\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    marginBottom: 15\n  },\n  seeAllText: {\n    color: theme.colors.primary,\n    fontWeight: '600'\n  },\n  statsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 15\n  },\n  statCard: {\n    backgroundColor: theme.colors.white,\n    borderRadius: 12,\n    padding: 15,\n    width: '47%',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3\n  },\n  statValue: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n    marginBottom: 5\n  },\n  statLabel: {\n    fontSize: 12,\n    color: theme.colors.gray,\n    textAlign: 'center'\n  },\n  formGroup: {\n    marginBottom: 20\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 8\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    color: theme.colors.text,\n    backgroundColor: theme.colors.white\n  },\n  textArea: {\n    height: 80,\n    textAlignVertical: 'top'\n  },\n  selector: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    padding: 12,\n    backgroundColor: theme.colors.white\n  },\n  selectorText: {\n    fontSize: 16,\n    color: theme.colors.text\n  },\n  placeholder: {\n    color: theme.colors.gray\n  },\n  photoGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10\n  },\n  photoContainer: {\n    position: 'relative'\n  },\n  photoThumbnail: {\n    width: 80,\n    height: 80,\n    borderRadius: 8\n  },\n  removePhotoButton: {\n    position: 'absolute',\n    top: -5,\n    right: -5,\n    backgroundColor: theme.colors.white,\n    borderRadius: 10\n  },\n  addPhotoButton: {\n    width: 80,\n    height: 80,\n    borderRadius: 8,\n    borderWidth: 2,\n    borderColor: theme.colors.border,\n    borderStyle: 'dashed',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  addPhotoText: {\n    fontSize: 12,\n    color: theme.colors.gray,\n    marginTop: 4\n  },\n  estimatedCredits: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: theme.colors.primary + '10',\n    padding: 15,\n    borderRadius: 8,\n    marginBottom: 20\n  },\n  estimatedLabel: {\n    fontSize: 16,\n    color: theme.colors.text\n  },\n  estimatedValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  },\n  submitButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 15,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  disabledButton: {\n    backgroundColor: theme.colors.gray\n  },\n  submitButtonText: {\n    color: theme.colors.white,\n    fontSize: 16,\n    fontWeight: '600'\n  },\n  submissionItem: {\n    backgroundColor: theme.colors.white,\n    borderRadius: 12,\n    padding: 15,\n    marginBottom: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3\n  },\n  submissionContent: {\n    flex: 1\n  },\n  submissionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 5\n  },\n  submissionType: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: theme.colors.text\n  },\n  submissionDate: {\n    fontSize: 12,\n    color: theme.colors.gray\n  },\n  submissionWeight: {\n    fontSize: 14,\n    color: theme.colors.gray,\n    marginBottom: 10\n  },\n  submissionFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  statusBadge: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12\n  },\n  verifiedStatus: {\n    backgroundColor: theme.colors.success + '20'\n  },\n  pendingStatus: {\n    backgroundColor: theme.colors.warning + '20'\n  },\n  rejectedStatus: {\n    backgroundColor: theme.colors.error + '20'\n  },\n  statusText: {\n    fontSize: 12,\n    fontWeight: '600',\n    color: theme.colors.success\n  },\n  submissionCredits: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: theme.colors.primary\n  },\n  emptyState: {\n    alignItems: 'center',\n    padding: 40\n  },\n  emptyText: {\n    fontSize: 16,\n    color: theme.colors.gray,\n    marginTop: 10\n  },\n  modalContainer: {\n    flex: 1,\n    backgroundColor: theme.colors.white\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 20,\n    paddingTop: 60,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.colors.text\n  },\n  cancelButton: {\n    color: theme.colors.gray,\n    fontSize: 16\n  },\n  modalContent: {\n    flex: 1,\n    padding: 20\n  },\n  typeOption: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 12,\n    padding: 15,\n    marginBottom: 15\n  },\n  typeOptionContent: {\n    marginBottom: 10\n  },\n  typeName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    marginBottom: 5\n  },\n  typeDescription: {\n    fontSize: 14,\n    color: theme.colors.gray,\n    marginBottom: 5\n  },\n  typeRate: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: theme.colors.primary\n  },\n  typeExamples: {\n    marginTop: 5\n  },\n  exampleText: {\n    fontSize: 12,\n    color: theme.colors.gray,\n    marginBottom: 2\n  },\n  stationOption: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 12,\n    padding: 15,\n    marginBottom: 10\n  },\n  stationName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    marginBottom: 5\n  },\n  stationAddress: {\n    fontSize: 14,\n    color: theme.colors.gray,\n    marginBottom: 5\n  },\n  stationHours: {\n    fontSize: 12,\n    color: theme.colors.gray\n  },\n  photoModalContent: {\n    padding: 40,\n    gap: 30\n  },\n  photoOption: {\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: theme.colors.background,\n    borderRadius: 12\n  },\n  photoOptionText: {\n    fontSize: 16,\n    color: theme.colors.primary,\n    marginTop: 10,\n    fontWeight: '600'\n  },\n  fullPhotoContainer: {\n    flex: 1,\n    backgroundColor: 'black',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  closeFullPhotoButton: {\n    position: 'absolute',\n    top: 60,\n    right: 20,\n    zIndex: 1\n  },\n  fullSizePhoto: {\n    width: '100%',\n    height: '80%',\n    resizeMode: 'contain'\n  }\n});\nexport default EnhancedPlasticWasteScreen;","map":{"version":3,"names":["React","useState","useEffect","useCallback","View","Text","StyleSheet","ScrollView","TouchableOpacity","Alert","Modal","TextInput","Image","RefreshControl","Ionicons","ImagePicker","Location","useAuth","useData","wasteService","theme","jsx","_jsx","jsxs","_jsxs","EnhancedPlasticWasteScreen","_ref","navigation","_useAuth","user","_useData","stations","_useState","_useState2","_slicedToArray","refreshing","setRefreshing","_useState3","_useState4","loading","setLoading","_useState5","plastic_type","weight_kg","photos","station_id","notes","location","_useState6","submissionData","setSubmissionData","_useState7","_useState8","showTypeModal","setShowTypeModal","_useState9","_useState0","showStationModal","setShowStationModal","_useState1","_useState10","showPhotoModal","setShowPhotoModal","_useState11","_useState12","selectedPhoto","setSelectedPhoto","_useState13","_useState14","wasteHistory","setWasteHistory","_useState15","_useState16","userStats","setUserStats","_useState17","_useState18","wasteBreakdown","setWasteBreakdown","_useState19","_useState20","plasticStations","setPlasticStations","loadWasteData","getCurrentLocation","filterPlasticStations","_ref2","_asyncToGenerator","_yield$Promise$all","Promise","all","getWasteHistory","limit","getWasteStats","getWasteBreakdown","_yield$Promise$all2","history","stats","breakdown","error","console","apply","arguments","_ref3","_yield$Location$reque","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","prev","_objectSpread","latitude","coords","longitude","filtered","filter","station","accepts_plastic","onRefresh","handleTakePhoto","_ref5","_yield$ImagePicker$re","requestCameraPermissionsAsync","alert","result","launchCameraAsync","allowsEditing","aspect","quality","canceled","concat","_toConsumableArray","assets","handleSelectFromGallery","_ref6","_yield$ImagePicker$re2","requestMediaLibraryPermissionsAsync","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsMultipleSelection","removePhoto","index","_","i","handleSubmitWaste","_ref7","validation","validateSubmissionData","isValid","errors","join","length","formData","FormData","append","toString","forEach","photo","uri","type","name","submitWaste","estimatedCredits","calculateCredits","parseFloat","text","onPress","navigate","message","renderStats","_userStats$totalWeigh","_userStats$co2Saved","style","styles","section","children","sectionTitle","statsGrid","statCard","statValue","totalWeight","toFixed","statLabel","totalCredits","totalSubmissions","co2Saved","renderSubmissionForm","_plasticStations$find","formGroup","label","selector","selectorText","placeholder","getWasteTypeInfo","size","color","colors","gray","input","value","onChangeText","keyboardType","find","s","id","photoGrid","map","photoContainer","source","photoThumbnail","removePhotoButton","addPhotoButton","addPhotoText","textArea","multiline","numberOfLines","estimatedLabel","estimatedValue","submitButton","disabledButton","disabled","submitButtonText","renderRecentSubmissions","sectionHeader","seeAllText","emptyState","emptyText","slice","submission","submissionItem","submissionContent","submissionHeader","submissionType","submissionDate","Date","submitted_at","toLocaleDateString","submissionWeight","station_name","submissionFooter","statusBadge","verification_status","verifiedStatus","pendingStatus","rejectedStatus","statusText","formatWasteStatus","submissionCredits","credits_earned","renderTypeModal","visible","animationType","presentationStyle","modalContainer","modalHeader","cancelButton","modalTitle","modalContent","getAllWasteTypes","typeInfo","typeOption","typeOptionContent","typeName","typeDescription","description","typeRate","creditRate","typeExamples","examples","example","exampleText","renderStationModal","stationOption","stationName","stationAddress","address","stationHours","operating_hours","renderPhotoModal","photoModalContent","photoOption","primary","photoOptionText","renderFullSizePhotoModal","fullPhotoContainer","closeFullPhotoButton","white","fullSizePhoto","container","refreshControl","create","flex","backgroundColor","background","padding","flexDirection","justifyContent","alignItems","marginBottom","fontSize","fontWeight","flexWrap","gap","borderRadius","width","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","textAlign","borderWidth","borderColor","border","textAlignVertical","position","top","right","borderStyle","marginTop","paddingHorizontal","paddingVertical","success","warning","paddingTop","borderBottomWidth","borderBottomColor","zIndex","resizeMode"],"sources":["C:/Users/User/Desktop/Ecolith Promps/V3/EcolithSwap/src/screens/EnhancedPlasticWasteScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n  Alert,\n  Modal,\n  TextInput,\n  Image,\n  RefreshControl,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Location from 'expo-location';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useData } from '../contexts/DataContext';\nimport wasteService from '../services/wasteService';\nimport { theme } from '../utils/theme';\n\nconst EnhancedPlasticWasteScreen = ({ navigation }) => {\n  const { user } = useAuth();\n  const { stations } = useData();\n  const [refreshing, setRefreshing] = useState(false);\n  const [loading, setLoading] = useState(false);\n  \n  // Submission data\n  const [submissionData, setSubmissionData] = useState({\n    plastic_type: '',\n    weight_kg: '',\n    photos: [],\n    station_id: '',\n    notes: '',\n    location: null,\n  });\n  \n  // UI state\n  const [showTypeModal, setShowTypeModal] = useState(false);\n  const [showStationModal, setShowStationModal] = useState(false);\n  const [showPhotoModal, setShowPhotoModal] = useState(false);\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\n  \n  // Data\n  const [wasteHistory, setWasteHistory] = useState([]);\n  const [userStats, setUserStats] = useState(null);\n  const [wasteBreakdown, setWasteBreakdown] = useState([]);\n  const [plasticStations, setPlasticStations] = useState([]);\n\n  useEffect(() => {\n    loadWasteData();\n    getCurrentLocation();\n    filterPlasticStations();\n  }, [stations]);\n\n  const loadWasteData = async () => {\n    try {\n      setLoading(true);\n      const [history, stats, breakdown] = await Promise.all([\n        wasteService.getWasteHistory({ limit: 20 }),\n        wasteService.getWasteStats(),\n        wasteService.getWasteBreakdown(),\n      ]);\n      \n      setWasteHistory(history || []);\n      setUserStats(stats);\n      setWasteBreakdown(breakdown || []);\n    } catch (error) {\n      console.error('Error loading waste data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getCurrentLocation = async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status === 'granted') {\n        const location = await Location.getCurrentPositionAsync({});\n        setSubmissionData(prev => ({\n          ...prev,\n          location: {\n            latitude: location.coords.latitude,\n            longitude: location.coords.longitude,\n          }\n        }));\n      }\n    } catch (error) {\n      console.error('Error getting location:', error);\n    }\n  };\n\n  const filterPlasticStations = () => {\n    const filtered = stations.filter(station => station.accepts_plastic);\n    setPlasticStations(filtered);\n  };\n\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    await loadWasteData();\n    setRefreshing(false);\n  }, []);\n\n  const handleTakePhoto = async () => {\n    const { status } = await ImagePicker.requestCameraPermissionsAsync();\n    \n    if (status !== 'granted') {\n      Alert.alert('Permission Required', 'Please allow camera access to take photos.');\n      return;\n    }\n\n    const result = await ImagePicker.launchCameraAsync({\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 0.8,\n    });\n\n    if (!result.canceled) {\n      setSubmissionData(prev => ({\n        ...prev,\n        photos: [...prev.photos, result.assets[0]]\n      }));\n    }\n  };\n\n  const handleSelectFromGallery = async () => {\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    \n    if (status !== 'granted') {\n      Alert.alert('Permission Required', 'Please allow photo library access.');\n      return;\n    }\n\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsMultipleSelection: true,\n      quality: 0.8,\n    });\n\n    if (!result.canceled) {\n      setSubmissionData(prev => ({\n        ...prev,\n        photos: [...prev.photos, ...result.assets]\n      }));\n    }\n  };\n\n  const removePhoto = (index) => {\n    setSubmissionData(prev => ({\n      ...prev,\n      photos: prev.photos.filter((_, i) => i !== index)\n    }));\n  };\n\n  const handleSubmitWaste = async () => {\n    // Validation\n    const validation = wasteService.validateSubmissionData(submissionData);\n    if (!validation.isValid) {\n      Alert.alert('Validation Error', validation.errors.join('\\n'));\n      return;\n    }\n\n    if (submissionData.photos.length === 0) {\n      Alert.alert('Photos Required', 'Please add at least one photo of your plastic waste.');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      \n      // Create form data for file upload\n      const formData = new FormData();\n      formData.append('waste_type', submissionData.plastic_type);\n      formData.append('weight_kg', submissionData.weight_kg);\n      formData.append('station_id', submissionData.station_id);\n      formData.append('notes', submissionData.notes);\n      \n      if (submissionData.location) {\n        formData.append('latitude', submissionData.location.latitude.toString());\n        formData.append('longitude', submissionData.location.longitude.toString());\n      }\n      \n      // Add photos\n      submissionData.photos.forEach((photo, index) => {\n        formData.append('photos', {\n          uri: photo.uri,\n          type: 'image/jpeg',\n          name: `waste_photo_${index}.jpg`,\n        });\n      });\n      \n      const result = await wasteService.submitWaste(formData);\n      \n      // Calculate estimated credits\n      const estimatedCredits = wasteService.calculateCredits(\n        submissionData.plastic_type, \n        parseFloat(submissionData.weight_kg)\n      );\n      \n      Alert.alert(\n        'Submission Successful!',\n        `Your plastic waste submission has been recorded.\\n\\nWeight: ${submissionData.weight_kg} kg\\nEstimated Credits: ${estimatedCredits} KES\\n\\nIt will be verified within 24 hours.`,\n        [\n          {\n            text: 'Submit More',\n            onPress: () => {\n              setSubmissionData({\n                plastic_type: '',\n                weight_kg: '',\n                photos: [],\n                station_id: '',\n                notes: '',\n                location: submissionData.location, // Keep location\n              });\n            }\n          },\n          {\n            text: 'View History',\n            onPress: () => navigation.navigate('WasteHistory')\n          }\n        ]\n      );\n      \n      await loadWasteData();\n    } catch (error) {\n      Alert.alert('Submission Failed', error.message || 'Failed to submit plastic waste.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderStats = () => (\n    <View style={styles.section}>\n      <Text style={styles.sectionTitle}>Your Impact</Text>\n      \n      <View style={styles.statsGrid}>\n        <View style={styles.statCard}>\n          <Text style={styles.statValue}>{userStats?.totalWeight?.toFixed(1) || '0'} kg</Text>\n          <Text style={styles.statLabel}>Total Recycled</Text>\n        </View>\n        \n        <View style={styles.statCard}>\n          <Text style={styles.statValue}>{userStats?.totalCredits || 0}</Text>\n          <Text style={styles.statLabel}>Credits Earned</Text>\n        </View>\n        \n        <View style={styles.statCard}>\n          <Text style={styles.statValue}>{userStats?.totalSubmissions || 0}</Text>\n          <Text style={styles.statLabel}>Submissions</Text>\n        </View>\n        \n        <View style={styles.statCard}>\n          <Text style={styles.statValue}>{userStats?.co2Saved?.toFixed(1) || '0'} kg</Text>\n          <Text style={styles.statLabel}>CO₂ Saved</Text>\n        </View>\n      </View>\n    </View>\n  );\n\n  const renderSubmissionForm = () => (\n    <View style={styles.section}>\n      <Text style={styles.sectionTitle}>Submit Plastic Waste</Text>\n      \n      {/* Plastic Type Selector */}\n      <View style={styles.formGroup}>\n        <Text style={styles.label}>Plastic Type *</Text>\n        <TouchableOpacity \n          style={styles.selector} \n          onPress={() => setShowTypeModal(true)}\n        >\n          <Text style={[styles.selectorText, !submissionData.plastic_type && styles.placeholder]}>\n            {submissionData.plastic_type \n              ? wasteService.getWasteTypeInfo(submissionData.plastic_type).name\n              : 'Select plastic type'\n            }\n          </Text>\n          <Ionicons name=\"chevron-down\" size={20} color={theme.colors.gray} />\n        </TouchableOpacity>\n      </View>\n      \n      {/* Weight Input */}\n      <View style={styles.formGroup}>\n        <Text style={styles.label}>Weight (kg) *</Text>\n        <TextInput\n          style={styles.input}\n          value={submissionData.weight_kg}\n          onChangeText={(text) => setSubmissionData(prev => ({ ...prev, weight_kg: text }))}\n          placeholder=\"e.g., 2.5\"\n          keyboardType=\"decimal-pad\"\n        />\n      </View>\n      \n      {/* Station Selector */}\n      <View style={styles.formGroup}>\n        <Text style={styles.label}>Drop-off Station *</Text>\n        <TouchableOpacity \n          style={styles.selector} \n          onPress={() => setShowStationModal(true)}\n        >\n          <Text style={[styles.selectorText, !submissionData.station_id && styles.placeholder]}>\n            {submissionData.station_id \n              ? plasticStations.find(s => s.id === submissionData.station_id)?.name\n              : 'Select station'\n            }\n          </Text>\n          <Ionicons name=\"chevron-down\" size={20} color={theme.colors.gray} />\n        </TouchableOpacity>\n      </View>\n      \n      {/* Photos */}\n      <View style={styles.formGroup}>\n        <Text style={styles.label}>Photos *</Text>\n        <View style={styles.photoGrid}>\n          {submissionData.photos.map((photo, index) => (\n            <View key={index} style={styles.photoContainer}>\n              <TouchableOpacity onPress={() => setSelectedPhoto(photo)}>\n                <Image source={{ uri: photo.uri }} style={styles.photoThumbnail} />\n              </TouchableOpacity>\n              <TouchableOpacity \n                style={styles.removePhotoButton} \n                onPress={() => removePhoto(index)}\n              >\n                <Ionicons name=\"close-circle\" size={20} color={theme.colors.error} />\n              </TouchableOpacity>\n            </View>\n          ))}\n          \n          <TouchableOpacity style={styles.addPhotoButton} onPress={() => setShowPhotoModal(true)}>\n            <Ionicons name=\"camera\" size={24} color={theme.colors.gray} />\n            <Text style={styles.addPhotoText}>Add Photo</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n      \n      {/* Notes */}\n      <View style={styles.formGroup}>\n        <Text style={styles.label}>Notes (Optional)</Text>\n        <TextInput\n          style={[styles.input, styles.textArea]}\n          value={submissionData.notes}\n          onChangeText={(text) => setSubmissionData(prev => ({ ...prev, notes: text }))}\n          placeholder=\"Additional information about your submission...\"\n          multiline\n          numberOfLines={3}\n        />\n      </View>\n      \n      {/* Estimated Credits */}\n      {submissionData.plastic_type && submissionData.weight_kg && (\n        <View style={styles.estimatedCredits}>\n          <Text style={styles.estimatedLabel}>Estimated Credits:</Text>\n          <Text style={styles.estimatedValue}>\n            {wasteService.calculateCredits(\n              submissionData.plastic_type, \n              parseFloat(submissionData.weight_kg) || 0\n            )} KES\n          </Text>\n        </View>\n      )}\n      \n      {/* Submit Button */}\n      <TouchableOpacity \n        style={[\n          styles.submitButton,\n          (!submissionData.plastic_type || !submissionData.weight_kg || \n           !submissionData.station_id || submissionData.photos.length === 0) && \n          styles.disabledButton\n        ]} \n        onPress={handleSubmitWaste}\n        disabled={loading || !submissionData.plastic_type || !submissionData.weight_kg || \n                 !submissionData.station_id || submissionData.photos.length === 0}\n      >\n        <Text style={styles.submitButtonText}>\n          {loading ? 'Submitting...' : 'Submit Plastic Waste'}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  const renderRecentSubmissions = () => (\n    <View style={styles.section}>\n      <View style={styles.sectionHeader}>\n        <Text style={styles.sectionTitle}>Recent Submissions</Text>\n        <TouchableOpacity onPress={() => navigation.navigate('WasteHistory')}>\n          <Text style={styles.seeAllText}>See All</Text>\n        </TouchableOpacity>\n      </View>\n      \n      {wasteHistory.length === 0 ? (\n        <View style={styles.emptyState}>\n          <Ionicons name=\"leaf-outline\" size={48} color={theme.colors.gray} />\n          <Text style={styles.emptyText}>No submissions yet</Text>\n        </View>\n      ) : (\n        wasteHistory.slice(0, 3).map((submission) => (\n          <TouchableOpacity \n            key={submission.id} \n            style={styles.submissionItem}\n            onPress={() => navigation.navigate('WasteDetails', { submission })}\n          >\n            <View style={styles.submissionContent}>\n              <View style={styles.submissionHeader}>\n                <Text style={styles.submissionType}>\n                  {wasteService.getWasteTypeInfo(submission.plastic_type).name}\n                </Text>\n                <Text style={styles.submissionDate}>\n                  {new Date(submission.submitted_at).toLocaleDateString()}\n                </Text>\n              </View>\n              \n              <Text style={styles.submissionWeight}>\n                {submission.weight_kg} kg • {submission.station_name}\n              </Text>\n              \n              <View style={styles.submissionFooter}>\n                <View style={[\n                  styles.statusBadge,\n                  submission.verification_status === 'verified' ? styles.verifiedStatus :\n                  submission.verification_status === 'pending_verification' ? styles.pendingStatus :\n                  styles.rejectedStatus\n                ]}>\n                  <Text style={styles.statusText}>\n                    {wasteService.formatWasteStatus(submission.verification_status)}\n                  </Text>\n                </View>\n                \n                <Text style={styles.submissionCredits}>\n                  {submission.credits_earned || 0} KES\n                </Text>\n              </View>\n            </View>\n            \n            <Ionicons name=\"chevron-forward\" size={20} color={theme.colors.gray} />\n          </TouchableOpacity>\n        ))\n      )}\n    </View>\n  );\n\n  // Modals\n  const renderTypeModal = () => (\n    <Modal visible={showTypeModal} animationType=\"slide\" presentationStyle=\"formSheet\">\n      <View style={styles.modalContainer}>\n        <View style={styles.modalHeader}>\n          <TouchableOpacity onPress={() => setShowTypeModal(false)}>\n            <Text style={styles.cancelButton}>Cancel</Text>\n          </TouchableOpacity>\n          <Text style={styles.modalTitle}>Select Plastic Type</Text>\n          <View style={styles.placeholder} />\n        </View>\n        \n        <ScrollView style={styles.modalContent}>\n          {wasteService.getAllWasteTypes().map((type) => {\n            const typeInfo = wasteService.getWasteTypeInfo(type.value);\n            return (\n              <TouchableOpacity\n                key={type.value}\n                style={styles.typeOption}\n                onPress={() => {\n                  setSubmissionData(prev => ({ ...prev, plastic_type: type.value }));\n                  setShowTypeModal(false);\n                }}\n              >\n                <View style={styles.typeOptionContent}>\n                  <Text style={styles.typeName}>{typeInfo.name}</Text>\n                  <Text style={styles.typeDescription}>{typeInfo.description}</Text>\n                  <Text style={styles.typeRate}>{typeInfo.creditRate} KES per kg</Text>\n                </View>\n                \n                <View style={styles.typeExamples}>\n                  {typeInfo.examples.map((example, index) => (\n                    <Text key={index} style={styles.exampleText}>• {example}</Text>\n                  ))}\n                </View>\n              </TouchableOpacity>\n            );\n          })}\n        </ScrollView>\n      </View>\n    </Modal>\n  );\n\n  const renderStationModal = () => (\n    <Modal visible={showStationModal} animationType=\"slide\" presentationStyle=\"formSheet\">\n      <View style={styles.modalContainer}>\n        <View style={styles.modalHeader}>\n          <TouchableOpacity onPress={() => setShowStationModal(false)}>\n            <Text style={styles.cancelButton}>Cancel</Text>\n          </TouchableOpacity>\n          <Text style={styles.modalTitle}>Select Station</Text>\n          <View style={styles.placeholder} />\n        </View>\n        \n        <ScrollView style={styles.modalContent}>\n          {plasticStations.map((station) => (\n            <TouchableOpacity\n              key={station.id}\n              style={styles.stationOption}\n              onPress={() => {\n                setSubmissionData(prev => ({ ...prev, station_id: station.id }));\n                setShowStationModal(false);\n              }}\n            >\n              <Text style={styles.stationName}>{station.name}</Text>\n              <Text style={styles.stationAddress}>{station.address}</Text>\n              <Text style={styles.stationHours}>Hours: {station.operating_hours}</Text>\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n      </View>\n    </Modal>\n  );\n\n  const renderPhotoModal = () => (\n    <Modal visible={showPhotoModal} animationType=\"slide\" presentationStyle=\"formSheet\">\n      <View style={styles.modalContainer}>\n        <View style={styles.modalHeader}>\n          <TouchableOpacity onPress={() => setShowPhotoModal(false)}>\n            <Text style={styles.cancelButton}>Cancel</Text>\n          </TouchableOpacity>\n          <Text style={styles.modalTitle}>Add Photo</Text>\n          <View style={styles.placeholder} />\n        </View>\n        \n        <View style={styles.photoModalContent}>\n          <TouchableOpacity style={styles.photoOption} onPress={handleTakePhoto}>\n            <Ionicons name=\"camera\" size={32} color={theme.colors.primary} />\n            <Text style={styles.photoOptionText}>Take Photo</Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity style={styles.photoOption} onPress={handleSelectFromGallery}>\n            <Ionicons name=\"images\" size={32} color={theme.colors.primary} />\n            <Text style={styles.photoOptionText}>Choose from Gallery</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n\n  const renderFullSizePhotoModal = () => (\n    <Modal visible={!!selectedPhoto} animationType=\"fade\">\n      <View style={styles.fullPhotoContainer}>\n        <TouchableOpacity \n          style={styles.closeFullPhotoButton} \n          onPress={() => setSelectedPhoto(null)}\n        >\n          <Ionicons name=\"close\" size={32} color={theme.colors.white} />\n        </TouchableOpacity>\n        \n        {selectedPhoto && (\n          <Image source={{ uri: selectedPhoto.uri }} style={styles.fullSizePhoto} />\n        )}\n      </View>\n    </Modal>\n  );\n\n  return (\n    <ScrollView \n      style={styles.container}\n      refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}\n    >\n      {renderStats()}\n      {renderSubmissionForm()}\n      {renderRecentSubmissions()}\n      {renderTypeModal()}\n      {renderStationModal()}\n      {renderPhotoModal()}\n      {renderFullSizePhotoModal()}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  section: {\n    padding: 20,\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    marginBottom: 15,\n  },\n  seeAllText: {\n    color: theme.colors.primary,\n    fontWeight: '600',\n  },\n  statsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 15,\n  },\n  statCard: {\n    backgroundColor: theme.colors.white,\n    borderRadius: 12,\n    padding: 15,\n    width: '47%',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  statValue: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n    marginBottom: 5,\n  },\n  statLabel: {\n    fontSize: 12,\n    color: theme.colors.gray,\n    textAlign: 'center',\n  },\n  formGroup: {\n    marginBottom: 20,\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 8,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    color: theme.colors.text,\n    backgroundColor: theme.colors.white,\n  },\n  textArea: {\n    height: 80,\n    textAlignVertical: 'top',\n  },\n  selector: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    padding: 12,\n    backgroundColor: theme.colors.white,\n  },\n  selectorText: {\n    fontSize: 16,\n    color: theme.colors.text,\n  },\n  placeholder: {\n    color: theme.colors.gray,\n  },\n  photoGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n  },\n  photoContainer: {\n    position: 'relative',\n  },\n  photoThumbnail: {\n    width: 80,\n    height: 80,\n    borderRadius: 8,\n  },\n  removePhotoButton: {\n    position: 'absolute',\n    top: -5,\n    right: -5,\n    backgroundColor: theme.colors.white,\n    borderRadius: 10,\n  },\n  addPhotoButton: {\n    width: 80,\n    height: 80,\n    borderRadius: 8,\n    borderWidth: 2,\n    borderColor: theme.colors.border,\n    borderStyle: 'dashed',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  addPhotoText: {\n    fontSize: 12,\n    color: theme.colors.gray,\n    marginTop: 4,\n  },\n  estimatedCredits: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: theme.colors.primary + '10',\n    padding: 15,\n    borderRadius: 8,\n    marginBottom: 20,\n  },\n  estimatedLabel: {\n    fontSize: 16,\n    color: theme.colors.text,\n  },\n  estimatedValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  submitButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 15,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  disabledButton: {\n    backgroundColor: theme.colors.gray,\n  },\n  submitButtonText: {\n    color: theme.colors.white,\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  submissionItem: {\n    backgroundColor: theme.colors.white,\n    borderRadius: 12,\n    padding: 15,\n    marginBottom: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  submissionContent: {\n    flex: 1,\n  },\n  submissionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 5,\n  },\n  submissionType: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n  },\n  submissionDate: {\n    fontSize: 12,\n    color: theme.colors.gray,\n  },\n  submissionWeight: {\n    fontSize: 14,\n    color: theme.colors.gray,\n    marginBottom: 10,\n  },\n  submissionFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  statusBadge: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n  },\n  verifiedStatus: {\n    backgroundColor: theme.colors.success + '20',\n  },\n  pendingStatus: {\n    backgroundColor: theme.colors.warning + '20',\n  },\n  rejectedStatus: {\n    backgroundColor: theme.colors.error + '20',\n  },\n  statusText: {\n    fontSize: 12,\n    fontWeight: '600',\n    color: theme.colors.success,\n  },\n  submissionCredits: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: theme.colors.primary,\n  },\n  emptyState: {\n    alignItems: 'center',\n    padding: 40,\n  },\n  emptyText: {\n    fontSize: 16,\n    color: theme.colors.gray,\n    marginTop: 10,\n  },\n  modalContainer: {\n    flex: 1,\n    backgroundColor: theme.colors.white,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 20,\n    paddingTop: 60,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n  },\n  cancelButton: {\n    color: theme.colors.gray,\n    fontSize: 16,\n  },\n  modalContent: {\n    flex: 1,\n    padding: 20,\n  },\n  typeOption: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 12,\n    padding: 15,\n    marginBottom: 15,\n  },\n  typeOptionContent: {\n    marginBottom: 10,\n  },\n  typeName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    marginBottom: 5,\n  },\n  typeDescription: {\n    fontSize: 14,\n    color: theme.colors.gray,\n    marginBottom: 5,\n  },\n  typeRate: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: theme.colors.primary,\n  },\n  typeExamples: {\n    marginTop: 5,\n  },\n  exampleText: {\n    fontSize: 12,\n    color: theme.colors.gray,\n    marginBottom: 2,\n  },\n  stationOption: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 12,\n    padding: 15,\n    marginBottom: 10,\n  },\n  stationName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    marginBottom: 5,\n  },\n  stationAddress: {\n    fontSize: 14,\n    color: theme.colors.gray,\n    marginBottom: 5,\n  },\n  stationHours: {\n    fontSize: 12,\n    color: theme.colors.gray,\n  },\n  photoModalContent: {\n    padding: 40,\n    gap: 30,\n  },\n  photoOption: {\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: theme.colors.background,\n    borderRadius: 12,\n  },\n  photoOptionText: {\n    fontSize: 16,\n    color: theme.colors.primary,\n    marginTop: 10,\n    fontWeight: '600',\n  },\n  fullPhotoContainer: {\n    flex: 1,\n    backgroundColor: 'black',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  closeFullPhotoButton: {\n    position: 'absolute',\n    top: 60,\n    right: 20,\n    zIndex: 1,\n  },\n  fullSizePhoto: {\n    width: '100%',\n    height: '80%',\n    resizeMode: 'contain',\n  },\n});\n\nexport default EnhancedPlasticWasteScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}